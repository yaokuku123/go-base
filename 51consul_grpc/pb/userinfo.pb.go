// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userinfo.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetUserInfoReq struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserInfoReq) Reset()         { *m = GetUserInfoReq{} }
func (m *GetUserInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoReq) ProtoMessage()    {}
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_785a78c34699a93d, []int{0}
}

func (m *GetUserInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoReq.Unmarshal(m, b)
}
func (m *GetUserInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoReq.Marshal(b, m, deterministic)
}
func (m *GetUserInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoReq.Merge(m, src)
}
func (m *GetUserInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoReq.Size(m)
}
func (m *GetUserInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoReq proto.InternalMessageInfo

func (m *GetUserInfoReq) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetUserInfoRsp struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Age                  int32    `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserInfoRsp) Reset()         { *m = GetUserInfoRsp{} }
func (m *GetUserInfoRsp) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoRsp) ProtoMessage()    {}
func (*GetUserInfoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_785a78c34699a93d, []int{1}
}

func (m *GetUserInfoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoRsp.Unmarshal(m, b)
}
func (m *GetUserInfoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoRsp.Marshal(b, m, deterministic)
}
func (m *GetUserInfoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoRsp.Merge(m, src)
}
func (m *GetUserInfoRsp) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoRsp.Size(m)
}
func (m *GetUserInfoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoRsp proto.InternalMessageInfo

func (m *GetUserInfoRsp) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetUserInfoRsp) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *GetUserInfoRsp) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func init() {
	proto.RegisterType((*GetUserInfoReq)(nil), "pb.GetUserInfoReq")
	proto.RegisterType((*GetUserInfoRsp)(nil), "pb.GetUserInfoRsp")
}

func init() { proto.RegisterFile("userinfo.proto", fileDescriptor_785a78c34699a93d) }

var fileDescriptor_785a78c34699a93d = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x2d, 0x4e, 0x2d,
	0xca, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0xd2,
	0xe4, 0xe2, 0x73, 0x4f, 0x2d, 0x09, 0x2d, 0x4e, 0x2d, 0xf2, 0xcc, 0x4b, 0xcb, 0x0f, 0x4a, 0x2d,
	0x14, 0x12, 0xe7, 0x62, 0x07, 0xa9, 0x8b, 0xcf, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d,
	0x62, 0x03, 0x71, 0x3d, 0x53, 0x94, 0x22, 0x50, 0x95, 0x16, 0x17, 0xe0, 0x54, 0x2a, 0x24, 0xcd,
	0xc5, 0x09, 0x96, 0xc8, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x0c, 0xe2, 0x00,
	0x09, 0xf8, 0x25, 0xe6, 0xa6, 0x0a, 0x09, 0x70, 0x31, 0x27, 0xa6, 0xa7, 0x4a, 0x30, 0x83, 0x75,
	0x80, 0x98, 0x46, 0x2e, 0x5c, 0xdc, 0x20, 0x63, 0x83, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85,
	0x4c, 0xb9, 0xb8, 0x91, 0x2c, 0x12, 0x12, 0xd2, 0x2b, 0x48, 0xd2, 0x43, 0x75, 0xa4, 0x14, 0x86,
	0x58, 0x71, 0x81, 0x13, 0x7b, 0x14, 0xab, 0x9e, 0xbe, 0x75, 0x41, 0x52, 0x12, 0x1b, 0xd8, 0x7b,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x30, 0xec, 0x80, 0x8e, 0xf0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoRsp, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoRsp, error) {
	out := new(GetUserInfoRsp)
	err := c.cc.Invoke(ctx, "/pb.UserService/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetUserInfo(context.Context, *GetUserInfoReq) (*GetUserInfoRsp, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetUserInfo(ctx context.Context, req *GetUserInfoReq) (*GetUserInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserInfo(ctx, req.(*GetUserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _UserService_GetUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userinfo.proto",
}
